mcu: #micro controller unit
  alias: Arduino 2560 Mega
  component_name: arduino # Name of component to use in HAL
  dev: /dev/cu.usbserial-0002 # Used for initial programming
  debug: true #optional
  enabled: True
  connection:
    ## A user can optionally define this section. If they don't, the config defaults to Serial, 115200 baud
    type: Serial
    baudrate: 115200                 #optional
    #connection_serial2: 0                       #optional - not sure what you get with a second serial port
    timeout: 5000 #optional, defaults to 5000 ms
    ## UDP Example
    #type: UDP #required for UDP
    #arduino_ip: 192.168.1.22 #required for UDP
    #arduino_port: 54321 # optional, default is 54321
    #listen_port: 54321 # optional, default is set to arduino_port  
    #timeout: 5000 #optional, defaults to 5000 ms

  io_map:
    analogInputs:
      - pin_id: 0
        pin_name: ain #hal pin name           #optional
        pin_smoothing: 200 #smoothing const   #optional
        pin_min_val: 10 #minimum value         #optional     these could be used to convert the value to 0-10 for example
        pin_max_val: 4096 #maximum value      #optional
      - pin_id: 1
      - pin_id: 3
        pin_name: anain #hal pin name           #optional
      - pin_id: 4
      - pin_id: 5
        pin_smoothing: 500 #smoothing const   #optional
      - pin_id: 6
        pin_min_val: 100 #minimum value         #optional     these could be used to convert the value to 0-10 for example
      - pin_id: 7
        pin_max_val: 2048 #maximum value      #optional
      - pin_id: 8
        pin_name: aaaabbbb #hal pin name           #optional
        pin_smoothing: 600 #smoothing const   #optional
        pin_min_val: 1000 #minimum value         #optional     these could be used to convert the value to 0-10 for example
        pin_max_val: 4096 #maximum value      #optional
    
    pwmOutputs:
      - pin_id: 12
        pin_enabled: 0
        pin_name: pwmout #hal pin name        #optional
        pin_init_state: 0 #optional
        pin_mode: 0 #optional
        pin_on_pwm: 255 #optional
        pin_off_pwm: 0 #optional


    digitalInputs:
      - pin_id: 4
        pin_enabled: 1
        pin_name: din #hal pin name           #optional
        pin_mode: 0 #trigger? #normal ? :D
        pin_pullup: 1
        pin_invert: 0
        pin_init_state: 1 #turn on at boot
        pin_debounce: 1


    digitalOutputs:
      - pin_id: 8
        pin_enabled: 1
        pin_name: din #hal pin name           #optional
        pin_type: HAL_BIT #hal pin type       #optional
        pin_init_state: 1 #turn on at boot  
        pin_ondisconnected_state: -1 #optional, default -1, 0/1 or -1 (no change from existing state)
        pin_onconnected_state: -1 #optional, default -1, 0/1 or -1 (no change from existing state)

      - pin_id: 12
        pin_enabled: 1
        pin_name: din #hal pin name           #optional
        pin_type: HAL_BIT #hal pin type       #optional
        pin_init_state: 1 #turn on at boot  
        pin_ondisconnected_state: -1 #optional, default -1, 0/1 or -1 (no change from existing state)
        pin_onconnected_state: -1 #optional, default -1, 0/1 or -1 (no change from existing state)

    lPoti: #create pins from single potentiometer
      - pin_id: 1
        pin_enabled: 1
        pin_name: lpoti  #hal pin name        #optional
        lpoti_latches: 9 #create 9 virtual pins
        pin_type: HAL_S32 #hal pin type     #optional   HAL_BIT, HAL_S32 , HAL_FLOAT
        value_replace: [40,50,60,70,80,90,100,110,120]
        pin_margin: 20 #optional
        
      - pin_id: 2
        pin_enabled: 1
        pin_name: lpoti2  #hal pin name        #optional
        lpoti_latches: 4 #create 4 virtual pins
        pin_type: HAL_FLOAT #hal pin type     #optional   HAL_BIT, HAL_S32 , HAL_FLOAT
        value_replace: [0.001,0.01,0.1,1]
        
    binarySelectorSwitch:
      - pin_id: 1
        pin_enabled: 1 #enable pin
        pin_name: binSel  #hal pin name       #optional
        pin_pins: [2,6,4,3,5] #1,2,4,8,16 how to make this more dynamic?
        pin_type: HAL_FLOAT #hal pin type     #optional   HAL_BIT, HAL_S32 , HAL_FLOAT
        value_replace: [180,190,200,0,0,0,0,0,0,0,0,0,0,0,0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170]

    quadratureEncoder:
      - pin_id: 0
        pin_enabled: 0
        pin_name: quadEnc  #hal pin name       #optional
        encoder_mode: counter #updown #vpins
        encoder_A_pin: 2  #?
        encoder_B_pin: 3  #?
        encoder_pins: [2,3] #?
        encoder_steps: 4  #electrical pulses per latch
        #new feature: create list of Virtual Pins, only one is ever selected/ HIGH, by rotation select next / previous one. In this config a simple encoder is used to select scale of an MPG. (Standard 0.1mm)
        encoder_virtualpins: 3 #create 10 virtual Pins
        encoder_virtualpin_start: 2 #select pin 3 at program start
        pin_type: HAL_FLOAT #hal pin type     #optional   HAL_BIT, HAL_S32 , HAL_FLOAT
        value_replace: [0.001,0.01,0.1,1]

    joystick:
      - pin_id: 2
        pin_enabled: 1
        pin_name: joystick  #hal pin name       #optional
        joystick_center: 512  
        joystick_deadband: 20 #ignore values around joystick_center + - deadband 
        joystick_scaling: 0.01

    statusled:
      - pin_id: 13
        useDled: 1 #use digital LED instead of Output 13 #weird setting?

    digitalLed:
      - pin_id: 6 # LED connected to pin 4
        Dled_name: DLED
        Dled_on_color: [0,0,255]
        Dled_off_color: [0,0,0]
        Dled_mode: 0 #0 = on/off, 1 = rgb values
        Dled_fade: 10 #fade time    #optional
        Dled_init_state: 1 #turn on at boot
        Dleds: 
        - Dled_id: 16
          Dled_name: Pimmel
          Dled_on_color: [0,0,255]
          Dled_off_color: [0,0,0]
          Dled_mode: 0 #0 = on/off, 1 = rgb values
          Dled_fade: 10 #fade time    #optional
        - Dled_id: 1
          Dled_on_color: [0,255,0]
          Dled_off_color: [0,0,0]
        - Dled_group: 
            Dled_group_start_id: 2
            Dled_group_end_id: 14
            Dled_on_color: [255,10,10]
            Dled_off_color: [90,80,70]
            Dled_mode: 0 #0 = on/off, 1 = rgb values #optional
            Dled_fade: 10 #fade colors ?    #optional
        - Dled_id: 15
          Dled_on_color: [255,255,255]
          Dled_off_color: [0,0,0]
          Dled_mode: 0 #0 = on/off, 1 = rgb values #optional
          Dled_fade: 10 #fade colors ?    #optional
        - Dled_group:
            Dled_name: group_1
            Dled_group_start_id: 17
            Dled_group_end_id: 200
            Dled_on_color: [01,02,03]
            Dled_off_color: [0,0,0]
            Dled_mode: 0 #0 = on/off, 1 = rgb values #optional

    
    matrixKeyboard:
      - pin_id: 0
        pin_name: keypad  #hal pin name       #optional
        Keyboard_cPins: [6,7,8,9]
        Keyboard_rPins: [2,3,4,5]
        Keyboard_chars: ["1", "2", "3", "A",
                        "4", "5", "6", "B",
                        "7", "8", "9", "C",
                        "Yay", "0", "#", "D"]
        Keyboard_pin_types: [1, 1, 1, 0,
                            1, 1, 1, 0,
                            1, 1, 1, 0, 
                            2, 1, 0, 0]
        #? i wonder if we should add the keyboard emulation funktionality to Inputs aswell?

    LEDmultiplexing:
      - pin_id: 0 #?
        pin_name: mled
        Multiplexled_Vcc_Pins: [30,31,32,33,34,35,36,37]
        Multiplexled_Gnd_Pins: [40,41,42,43,44,45,46,47]
        
    dallasThermistor:
      - pin_id: 0
        pin_name: dtemp
        pin_mode: c # F         #optional
        pin_pins: [2,3]
        # create mode, where a virtual pin is created; above Temp1 = on, below Temp2 = off. 


    rcServo: #new feature. 2 modes, 1 HAL_BIT: move servo to pos depending on on/Off. 2: HAL_S32 change pos by writing HALpin
      - pin_id: 3
        pin-name: servo
        pin_type: HAL_S32 #hal pin type     #optional   HAL_BIT, HAL_S32
        servo_min: 20
        servo_max: 90
        servo_speed: 10
        servo_on_pos: 34 #position if servo is set 0
        servo_off_pos: 90  #position if servo is set 1
    
    Stepper:
      #new feature: use Steppers to drive stuff not related to precision motion, like dust covers, wipers, chip conveyors, etc
      - pin_id: 0
        pin_name: stepper
        pin_mode: #i guess 2 modes come to mind: define 2 postions, drive there depending on halpin state, counter mode? same as encoder, but other way round. conter = steps from home pos.  
      

    glcd:
      - pin_id: 0
        #running out of ideas rn, so this is a remiinder for later
